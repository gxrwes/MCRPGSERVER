################################################################################
# Logging                                                                      #
################################################################################

# Verbose outputs (default: false)
# If "true", outputs command registration and unregistration logs in the console
verbose-outputs: false

# Silent logs (default: false)
# If "true", turns off all logging from the CommandAPI, except for errors.
silent-logs: false

################################################################################
# Messages                                                                     #
################################################################################

# Messages
# Controls messages that the CommandAPI displays to players
messages:

  # Missing executor implementation (default: "This command has no implementations for %s")
  # The message to display to senders when a command has no executor. Available
  # parameters are:
  #   %s - the executor class (lowercase)
  #   %S - the executor class (normal case)
  missing-executor-implementation: "This command has no implementations for %s"

################################################################################
# Debugging                                                                    #
################################################################################

# Create dispatcher JSON (default: false)
# If "true", the CommandAPI creates a command_registration.json file showing the
# mapping of registered commands. This is designed to be used by developers -
# setting this to "false" will improve command registration performance.
create-dispatcher-json: false

# Use latest version (default: false)
# If "true", the CommandAPI will use the latest available NMS implementation
# when the CommandAPI is used. This avoids all checks to see if the latest NMS
# implementation is actually compatible with the current Minecraft version.
use-latest-nms-version: false

################################################################################
# Command conversion                                                           #
################################################################################

# Plugins to convert (default: [])
# Controls the list of plugins to process for command conversion.
plugins-to-convert: []

# Other commands to convert (default: [])
# A list of other commands to convert. This should be used for commands which
# are not declared in a plugin.yml file.
other-commands-to-convert: []

# Skip sender proxy (default: [])
# Determines whether the proxy sender should be skipped when converting a
# command. If you are having issues with plugin command conversion, add the
# plugin to this list.
skip-sender-proxy: []